<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moyv.music.dao.SingerMapper">
    <resultMap id="BaseResultMap" type="com.moyv.music.domain.Singer">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="sex" jdbcType="TINYINT" property="sex"/>
        <result column="pic" jdbcType="VARCHAR" property="pic"/>
        <result column="birth" jdbcType="TIMESTAMP" property="birth"/>
        <result column="location" jdbcType="VARCHAR" property="location"/>
        <result column="introduction" jdbcType="VARCHAR" property="introduction"/>
    </resultMap>

    <sql id="Base_Column_list">
        id,name,sex,pic,birth,location,introduction
    </sql>

    <!--trim（修剪） 标签用于处理 SQL 语句的前后部分-->
    <!--prefix（前缀）suffix（后缀）表示生成的字符串会被包裹在圆括号中-->
    <!--suffixOverrides="," 的作用是去掉最后一个逗号（,）-->
    <!--使用test进行条件判断-->
    <insert id="insert" parameterType="com.moyv.music.domain.Singer">
        insert into singer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="pic != null">
                pic,
            </if>
            <if test="birth != null">
                birth,
            </if>
            <if test="location != null">
                location,
            </if>
            <if test="introduction != null">
                introduction,
            </if>
        </trim>
            values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name},
            </if>
            <if test="sex != null">
                #{sex},
            </if>
            <if test="pic != null">
                #{pic},
            </if>
            <if test="birth != null">
                #{birth},
            </if>
            <if test="location != null">
                #{location},
            </if>
            <if test="introduction != null">
                #{introduction},
            </if>
        </trim>
    </insert>
    
    <update id="update" parameterType="com.moyv.music.domain.Singer">
        update singer
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="pic != null">
                pic = #{pic},
            </if>
            <if test="birth != null">
                birth = #{birth},
            </if>
            <if test="location != null">
                location = #{location},
            </if>
            <if test="introduction != null">
                introduction = #{introduction},
            </if>
        </set>
            where id = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Integer">
        delete from singer where id=#{id}
    </delete>

    <select id="findById" resultType="com.moyv.music.domain.Singer">
        select * from singer where id =#{id}
    </select>

    <select id="findByName" resultType="com.moyv.music.domain.Singer">
        select * from singer where name =#{name}
    </select>

    <select id="allSinger" resultMap="BaseResultMap">
        select * from singer ;
    </select>

    <select id="singerOfName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select * from singer where name like #{name} ;
    </select>

    <select id="singerOfSex" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select * from singer where sex = #{sex} ;
    </select>
</mapper>